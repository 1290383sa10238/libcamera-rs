warning: fields `typ`, `description`, `enumeration` and `size` are never read
  --> libcamera-meta/src/lib.rs:11:5
   |
10 | pub struct Control {
   |            ------- fields in this struct
11 |     typ: String,
   |     ^^^
12 |     description: String,
   |     ^^^^^^^^^^^
13 |     enumeration: Option<Vec<ControlEnumValue>>,
   |     ^^^^^^^^^^^
14 |     size: Option<Vec<usize>>,
   |     ^^^^
   |
   = note: `#[warn(dead_code)]` on by default
   = note: `Control` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `name`, `value` and `description` are never read
  --> libcamera-meta/src/lib.rs:19:5
   |
18 | pub struct ControlEnumValue {
   |            ---------------- fields in this struct
19 |     name: String,
   |     ^^^^
20 |     value: i32,
   |     ^^^^^
21 |     description: String,
   |     ^^^^^^^^^^^
   |
   = note: `ControlEnumValue` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: `libcamera-meta` (lib) generated 2 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.03s
     Running `target/debug/examples/print`
thread 'main' panicked at '[
    Hash(
        {
            String(
                "controls",
            ): Array(
                [
                    Hash(
                        {
                            String(
                                "AeEnable",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "bool",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Enable or disable the AE.\n\n\\sa ExposureTime AnalogueGain\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AeLocked",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "bool",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Report the lock status of a running AE algorithm.\n\nIf the AE algorithm is locked the value shall be set to true, if it's\nconverging it shall be set to false. If the AE algorithm is not\nrunning the control shall not be present in the metadata control list.\n\n\\sa AeEnable\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AeMeteringMode",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Specify a metering mode for the AE algorithm to use. The metering\nmodes determine which parts of the image are used to determine the\nscene brightness. Metering modes may be platform specific and not\nall metering modes may be supported.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "MeteringCentreWeighted",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Centre-weighted metering mode.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "MeteringSpot",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Spot metering mode.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "MeteringMatrix",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Matrix metering mode.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "MeteringCustom",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        3,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Custom metering mode.",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AeConstraintMode",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Specify a constraint mode for the AE algorithm to use. These determine\nhow the measured scene brightness is adjusted to reach the desired\ntarget exposure. Constraint modes may be platform specific, and not\nall constraint modes may be supported.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ConstraintNormal",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Default constraint mode. This mode aims to balance the exposure of different parts of the image so as to reach a reasonable average level. However, highlights in the image may appear over-exposed and lowlights may appear under-exposed.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ConstraintHighlight",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Highlight constraint mode. This mode adjusts the exposure levels in order to try and avoid over-exposing the brightest parts (highlights) of an image. Other non-highlight parts of the image may appear under-exposed.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ConstraintShadows",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Shadows constraint mode. This mode adjusts the exposure levels in order to try and avoid under-exposing the dark parts (shadows) of an image. Other normally exposed parts of the image may appear over-exposed.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ConstraintCustom",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        3,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Custom constraint mode.",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AeExposureMode",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Specify an exposure mode for the AE algorithm to use. These specify\nhow the desired total exposure is divided between the shutter time\nand the sensor's analogue gain. The exposure modes are platform\nspecific, and not all exposure modes may be supported.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ExposureNormal",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Default exposure mode.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ExposureShort",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Exposure mode allowing only short exposure times.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ExposureLong",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Exposure mode allowing long exposure times.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ExposureCustom",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        3,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Custom exposure mode.",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "ExposureValue",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Specify an Exposure Value (EV) parameter. The EV parameter will only be\napplied if the AE algorithm is currently enabled.\n\nBy convention EV adjusts the exposure as log2. For example\nEV = [-2, -1, 0.5, 0, 0.5, 1, 2] results in an exposure adjustment\nof [1/4x, 1/2x, 1/sqrt(2)x, 1x, sqrt(2)x, 2x, 4x].\n\n\\sa AeEnable\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "ExposureTime",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Exposure time (shutter speed) for the frame applied in the sensor\ndevice. This value is specified in micro-seconds.\n\nSetting this value means that it is now fixed and the AE algorithm may\nnot change it. Setting it back to zero returns it to the control of the\nAE algorithm.\n\n\\sa AnalogueGain AeEnable\n\n\\todo Document the interactions between AeEnable and setting a fixed\nvalue for this control. Consider interactions with other AE features,\nsuch as aperture and aperture/shutter priority mode, and decide if\ncontrol of which features should be automatically adjusted shouldn't\nbetter be handled through a separate AE mode control.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AnalogueGain",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Analogue gain value applied in the sensor device.\nThe value of the control specifies the gain multiplier applied to all\ncolour channels. This value cannot be lower than 1.0.\n\nSetting this value means that it is now fixed and the AE algorithm may\nnot change it. Setting it back to zero returns it to the control of the\nAE algorithm.\n\n\\sa ExposureTime AeEnable\n\n\\todo Document the interactions between AeEnable and setting a fixed\nvalue for this control. Consider interactions with other AE features,\nsuch as aperture and aperture/shutter priority mode, and decide if\ncontrol of which features should be automatically adjusted shouldn't\nbetter be handled through a separate AE mode control.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "Brightness",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Specify a fixed brightness parameter. Positive values (up to 1.0)\nproduce brighter images; negative values (up to -1.0) produce darker\nimages and 0.0 leaves pixels unchanged.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "Contrast",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Specify a fixed contrast parameter. Normal contrast is given by the\nvalue 1.0; larger values produce images with more contrast.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "Lux",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Report an estimate of the current illuminance level in lux. The Lux\ncontrol can only be returned in metadata.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AwbEnable",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "bool",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Enable or disable the AWB.\n\n\\sa ColourGains\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AwbMode",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Specify the range of illuminants to use for the AWB algorithm. The modes\nsupported are platform specific, and not all modes may be supported.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbAuto",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Search over the whole colour temperature range.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbIncandescent",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Incandescent AWB lamp mode.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbTungsten",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Tungsten AWB lamp mode.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbFluorescent",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        3,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Fluorescent AWB lamp mode.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbIndoor",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        4,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Indoor AWB lighting mode.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbDaylight",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        5,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Daylight AWB lighting mode.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbCloudy",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        6,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Cloudy AWB lighting mode.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbCustom",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        7,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Custom AWB mode.",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AwbLocked",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "bool",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Report the lock status of a running AWB algorithm.\n\nIf the AWB algorithm is locked the value shall be set to true, if it's\nconverging it shall be set to false. If the AWB algorithm is not\nrunning the control shall not be present in the metadata control list.\n\n\\sa AwbEnable\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "ColourGains",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Pair of gain values for the Red and Blue colour channels, in that\norder. ColourGains can only be applied in a Request when the AWB is\ndisabled.\n\n\\sa AwbEnable\n",
                                    ),
                                    String(
                                        "size",
                                    ): Array(
                                        [
                                            Integer(
                                                2,
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "ColourTemperature",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Report the current estimate of the colour temperature, in kelvin, for this frame. The ColourTemperature control can only be returned in metadata.",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "Saturation",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Specify a fixed saturation parameter. Normal saturation is given by\nthe value 1.0; larger values produce more saturated colours; 0.0\nproduces a greyscale image.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "SensorBlackLevels",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Reports the sensor black levels used for processing a frame, in the\norder R, Gr, Gb, B. These values are returned as numbers out of a 16-bit\npixel range (as if pixels ranged from 0 to 65535). The SensorBlackLevels\ncontrol can only be returned in metadata.\n",
                                    ),
                                    String(
                                        "size",
                                    ): Array(
                                        [
                                            Integer(
                                                4,
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "Sharpness",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "A value of 0.0 means no sharpening. The minimum value means\nminimal sharpening, and shall be 0.0 unless the camera can't\ndisable sharpening completely. The default value shall give a\n\"reasonable\" level of sharpening, suitable for most use cases.\nThe maximum value may apply extremely high levels of sharpening,\nhigher than anyone could reasonably want. Negative values are\nnot allowed. Note also that sharpening is not applied to raw\nstreams.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "FocusFoM",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Reports a Figure of Merit (FoM) to indicate how in-focus the frame is.\nA larger FocusFoM value indicates a more in-focus frame. This control\ndepends on the IPA to gather ISP statistics from the defined focus\nregion, and combine them in a suitable way to generate a FocusFoM value.\nIn this respect, it is not necessarily aimed at providing a way to\nimplement a focus algorithm by the application, rather an indication of\nhow in-focus a frame is.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "ColourCorrectionMatrix",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "The 3x3 matrix that converts camera RGB to sRGB within the\nimaging pipeline. This should describe the matrix that is used\nafter pixels have been white-balanced, but before any gamma\ntransformation. The 3x3 matrix is stored in conventional reading\norder in an array of 9 floating point values.\n",
                                    ),
                                    String(
                                        "size",
                                    ): Array(
                                        [
                                            Integer(
                                                3,
                                            ),
                                            Integer(
                                                3,
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "ScalerCrop",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "Rectangle",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Sets the image portion that will be scaled to form the whole of\nthe final output image. The (x,y) location of this rectangle is\nrelative to the PixelArrayActiveAreas that is being used. The units\nremain native sensor pixels, even if the sensor is being used in\na binning or skipping mode.\n\nThis control is only present when the pipeline supports scaling. Its\nmaximum valid value is given by the properties::ScalerCropMaximum\nproperty, and the two can be used to implement digital zoom.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "DigitalGain",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Digital gain value applied during the processing steps applied\nto the image as captured from the sensor.\n\nThe global digital gain factor is applied to all the colour channels\nof the RAW image. Different pipeline models are free to\nspecify how the global gain factor applies to each separate\nchannel.\n\nIf an imaging pipeline applies digital gain in distinct\nprocessing steps, this value indicates their total sum.\nPipelines are free to decide how to adjust each processing\nstep to respect the received gain factor and shall report\ntheir total value in the request metadata.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "FrameDuration",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int64_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "The instantaneous frame duration from start of frame exposure to start\nof next exposure, expressed in microseconds. This control is meant to\nbe returned in metadata.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "FrameDurationLimits",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int64_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "The minimum and maximum (in that order) frame duration,\nexpressed in microseconds.\n\nWhen provided by applications, the control specifies the sensor frame\nduration interval the pipeline has to use. This limits the largest\nexposure time the sensor can use. For example, if a maximum frame\nduration of 33ms is requested (corresponding to 30 frames per second),\nthe sensor will not be able to raise the exposure time above 33ms.\nA fixed frame duration is achieved by setting the minimum and maximum\nvalues to be the same. Setting both values to 0 reverts to using the\nIPA provided defaults.\n\nThe maximum frame duration provides the absolute limit to the shutter\nspeed computed by the AE algorithm and it overrides any exposure mode\nsetting specified with controls::AeExposureMode. Similarly, when a\nmanual exposure time is set through controls::ExposureTime, it also\ngets clipped to the limits set by this control. When reported in\nmetadata, the control expresses the minimum and maximum frame\ndurations used after being clipped to the sensor provided frame\nduration limits.\n\n\\sa AeExposureMode\n\\sa ExposureTime\n\n\\todo Define how to calculate the capture frame rate by\ndefining controls to report additional delays introduced by\nthe capture pipeline or post-processing stages (ie JPEG\nconversion, frame scaling).\n\n\\todo Provide an explicit definition of default control values, for\nthis and all other controls.\n",
                                    ),
                                    String(
                                        "size",
                                    ): Array(
                                        [
                                            Integer(
                                                2,
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "SensorTemperature",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Temperature measure from the camera sensor in Celsius. This is typically\nobtained by a thermal sensor present on-die or in the camera module. The\nrange of reported temperatures is device dependent.\n\nThe SensorTemperature control will only be returned in metadata if a\nthemal sensor is present.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "SensorTimestamp",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int64_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "The time when the first row of the image sensor active array is exposed.\n\nThe timestamp, expressed in nanoseconds, represents a monotonically\nincreasing counter since the system boot time, as defined by the\nLinux-specific CLOCK_BOOTTIME clock id.\n\nThe SensorTimestamp control can only be returned in metadata.\n\n\\todo Define how the sensor timestamp has to be used in the reprocessing\nuse case.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AfMode",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control to set the mode of the AF (autofocus) algorithm.\n\nAn implementation may choose not to implement all the modes.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfModeManual",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AF algorithm is in manual mode. In this mode it will never\nperform any action nor move the lens of its own accord, but an\napplication can specify the desired lens position using the\nLensPosition control.\n\nIn this mode the AfState will always report AfStateIdle.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfModeAuto",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AF algorithm is in auto mode. This means that the algorithm\nwill never move the lens or change state unless the AfTrigger\ncontrol is used. The AfTrigger control can be used to initiate a\nfocus scan, the results of which will be reported by AfState.\n\nIf the autofocus algorithm is moved from AfModeAuto to another\nmode while a scan is in progress, the scan is cancelled\nimmediately, without waiting for the scan to finish.\n\nWhen first entering this mode the AfState will report\nAfStateIdle. When a trigger control is sent, AfState will\nreport AfStateScanning for a period before spontaneously\nchanging to AfStateFocused or AfStateFailed, depending on\nthe outcome of the scan. It will remain in this state until\nanother scan is initiated by the AfTrigger control. If a scan is\ncancelled (without changing to another mode), AfState will return\nto AfStateIdle.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfModeContinuous",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AF algorithm is in continuous mode. This means that the lens can\nre-start a scan spontaneously at any moment, without any user\nintervention. The AfState still reports whether the algorithm is\ncurrently scanning or not, though the application has no ability to\ninitiate or cancel scans, nor to move the lens for itself.\n\nHowever, applications can pause the AF algorithm from continuously\nscanning by using the AfPause control. This allows video or still\nimages to be captured whilst guaranteeing that the focus is fixed.\n\nWhen set to AfModeContinuous, the system will immediately initiate a\nscan so AfState will report AfStateScanning, and will settle on one\nof AfStateFocused or AfStateFailed, depending on the scan result.\n",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AfRange",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control to set the range of focus distances that is scanned. An\nimplementation may choose not to implement all the options here.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfRangeNormal",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "A wide range of focus distances is scanned, all the way from\ninfinity down to close distances, though depending on the\nimplementation, possibly not including the very closest macro\npositions.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfRangeMacro",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Only close distances are scanned.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfRangeFull",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The full range of focus distances is scanned just as with\nAfRangeNormal but this time including the very closest macro\npositions.\n",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AfSpeed",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control that determines whether the AF algorithm is to move the lens\nas quickly as possible or more steadily. For example, during video\nrecording it may be desirable not to move the lens too abruptly, but\nwhen in a preview mode (waiting for a still capture) it may be\nhelpful to move the lens as quickly as is reasonably possible.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfSpeedNormal",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Move the lens at its usual speed.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfSpeedFast",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Move the lens more quickly.",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AfMetering",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Instruct the AF algorithm how it should decide which parts of the image\nshould be used to measure focus.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfMeteringAuto",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AF algorithm should decide for itself where it will measure focus.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfMeteringWindows",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AF algorithm should use the rectangles defined by the AfWindows control to measure focus. If no windows are specified the behaviour is platform dependent.",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AfWindows",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "Rectangle",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Sets the focus windows used by the AF algorithm when AfMetering is set\nto AfMeteringWindows. The units used are pixels within the rectangle\nreturned by the ScalerCropMaximum property.\n\nIn order to be activated, a rectangle must be programmed with non-zero\nwidth and height. Internally, these rectangles are intersected with the\nScalerCropMaximum rectangle. If the window becomes empty after this\noperation, then the window is ignored. If all the windows end up being\nignored, then the behaviour is platform dependent.\n\nOn platforms that support the ScalerCrop control (for implementing\ndigital zoom, for example), no automatic recalculation or adjustment of\nAF windows is performed internally if the ScalerCrop is changed. If any\nwindow lies outside the output image after the scaler crop has been\napplied, it is up to the application to recalculate them.\n\nThe details of how the windows are used are platform dependent. We note\nthat when there is more than one AF window, a typical implementation\nmight find the optimal focus position for each one and finally select\nthe window where the focal distance for the objects shown in that part\nof the image are closest to the camera.\n",
                                    ),
                                    String(
                                        "size",
                                    ): Array(
                                        [
                                            String(
                                                "n",
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AfTrigger",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "This control starts an autofocus scan when AfMode is set to AfModeAuto,\nand can also be used to terminate a scan early.\n\nIt is ignored if AfMode is set to AfModeManual or AfModeContinuous.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfTriggerStart",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Start an AF scan. Ignored if a scan is in progress.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfTriggerCancel",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Cancel an AF scan. This does not cause the lens to move anywhere else. Ignored if no scan is in progress.",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AfPause",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "This control has no effect except when in continuous autofocus mode\n(AfModeContinuous). It can be used to pause any lens movements while\n(for example) images are captured. The algorithm remains inactive\nuntil it is instructed to resume.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfPauseImmediate",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Pause the continuous autofocus algorithm immediately, whether or not\nany kind of scan is underway. AfPauseState will subsequently report\nAfPauseStatePaused. AfState may report any of AfStateScanning,\nAfStateFocused or AfStateFailed, depending on the algorithm's state\nwhen it received this control.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfPauseDeferred",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "This is similar to AfPauseImmediate, and if the AfState is currently\nreporting AfStateFocused or AfStateFailed it will remain in that\nstate and AfPauseState will report AfPauseStatePaused.\n\nHowever, if the algorithm is scanning (AfStateScanning),\nAfPauseState will report AfPauseStatePausing until the scan is\nfinished, at which point AfState will report one of AfStateFocused\nor AfStateFailed, and AfPauseState will change to\nAfPauseStatePaused.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfPauseResume",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Resume continuous autofocus operation. The algorithm starts again\nfrom exactly where it left off, and AfPauseState will report\nAfPauseStateRunning.\n",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "LensPosition",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "float",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Acts as a control to instruct the lens to move to a particular position\nand also reports back the position of the lens for each frame.\n\nThe LensPosition control is ignored unless the AfMode is set to\nAfModeManual, though the value is reported back unconditionally in all\nmodes.\n\nThe units are a reciprocal distance scale like dioptres but normalised\nfor the hyperfocal distance. That is, for a lens with hyperfocal\ndistance H, and setting it to a focal distance D, the lens position LP,\nwhich is generally a non-integer, is given by\n\n\\f$LP = \\frac{H}{D}\\f$\n\nFor example:\n\n0 moves the lens to infinity.\n0.5 moves the lens to twice the hyperfocal distance.\n1 moves the lens to the hyperfocal position.\nAnd larger values will focus the lens ever closer.\n\n\\todo Define a property to report the Hyperforcal distance of calibrated\nlenses.\n\n\\todo Define a property to report the maximum and minimum positions of\nthis lens. The minimum value will often be zero (meaning infinity).\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AfState",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Reports the current state of the AF algorithm in conjunction with the\nreported AfMode value and (in continuous AF mode) the AfPauseState\nvalue. The possible state changes are described below, though we note\nthe following state transitions that occur when the AfMode is changed.\n\nIf the AfMode is set to AfModeManual, then the AfState will always\nreport AfStateIdle (even if the lens is subsequently moved). Changing to\nthe AfModeManual state does not initiate any lens movement.\n\nIf the AfMode is set to AfModeAuto then the AfState will report\nAfStateIdle. However, if AfModeAuto and AfTriggerStart are sent together\nthen AfState will omit AfStateIdle and move straight to AfStateScanning\n(and start a scan).\n\nIf the AfMode is set to AfModeContinuous then the AfState will initially\nreport AfStateScanning.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfStateIdle",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AF algorithm is in manual mode (AfModeManual) or in auto mode\n(AfModeAuto) and a scan has not yet been triggered, or an\nin-progress scan was cancelled.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfStateScanning",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AF algorithm is in auto mode (AfModeAuto), and a scan has been\nstarted using the AfTrigger control. The scan can be cancelled by\nsending AfTriggerCancel at which point the algorithm will either\nmove back to AfStateIdle or, if the scan actually completes before\nthe cancel request is processed, to one of AfStateFocused or\nAfStateFailed.\n\nAlternatively the AF algorithm could be in continuous mode\n(AfModeContinuous) at which point it may enter this state\nspontaneously whenever it determines that a rescan is needed.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfStateFocused",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AF algorithm is in auto (AfModeAuto) or continuous\n(AfModeContinuous) mode and a scan has completed with the result\nthat the algorithm believes the image is now in focus.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfStateFailed",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        3,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AF algorithm is in auto (AfModeAuto) or continuous\n(AfModeContinuous) mode and a scan has completed with the result\nthat the algorithm did not find a good focus position.\n",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AfPauseState",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Only applicable in continuous (AfModeContinuous) mode, this reports\nwhether the algorithm is currently running, paused or pausing (that is,\nwill pause as soon as any in-progress scan completes).\n\nAny change to AfMode will cause AfPauseStateRunning to be reported.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfPauseStateRunning",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Continuous AF is running and the algorithm may restart a scan\nspontaneously.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfPauseStatePausing",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Continuous AF has been sent an AfPauseDeferred control, and will\npause as soon as any in-progress scan completes (and then report\nAfPauseStatePaused). No new scans will be start spontaneously until\nthe AfPauseResume control is sent.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AfPauseStatePaused",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Continuous AF is paused. No further state changes or lens movements\nwill occur until the AfPauseResume control is sent.\n",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AePrecaptureTrigger",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control for AE metering trigger. Currently identical to\nANDROID_CONTROL_AE_PRECAPTURE_TRIGGER.\n\nWhether the camera device will trigger a precapture metering sequence\nwhen it processes this request.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AePrecaptureTriggerIdle",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The trigger is idle.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AePrecaptureTriggerStart",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The pre-capture AE metering is started by the camera.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AePrecaptureTriggerCancel",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The camera will cancel any active or completed metering sequence.\nThe AE algorithm is reset to its initial state.\n",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "NoiseReductionMode",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control to select the noise reduction algorithm mode. Currently\nidentical to ANDROID_NOISE_REDUCTION_MODE.\n\n Mode of operation for the noise reduction algorithm.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "NoiseReductionModeOff",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "No noise reduction is applied",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "NoiseReductionModeFast",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Noise reduction is applied without reducing the frame rate.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "NoiseReductionModeHighQuality",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "High quality noise reduction at the expense of frame rate.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "NoiseReductionModeMinimal",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        3,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Minimal noise reduction is applied without reducing the frame rate.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "NoiseReductionModeZSL",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        4,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Noise reduction is applied at different levels to different streams.\n",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "ColorCorrectionAberrationMode",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control to select the color correction aberration mode. Currently\nidentical to ANDROID_COLOR_CORRECTION_ABERRATION_MODE.\n\n Mode of operation for the chromatic aberration correction algorithm.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ColorCorrectionAberrationOff",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "No aberration correction is applied.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ColorCorrectionAberrationFast",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Aberration correction will not slow down the frame rate.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "ColorCorrectionAberrationHighQuality",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "High quality aberration correction which might reduce the frame\nrate.\n",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AeState",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control to report the current AE algorithm state. Currently identical to\nANDROID_CONTROL_AE_STATE.\n\n Current state of the AE algorithm.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AeStateInactive",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AE algorithm is inactive.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AeStateSearching",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AE algorithm has not converged yet.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AeStateConverged",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AE algorithm has converged.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AeStateLocked",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        3,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AE algorithm is locked.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AeStateFlashRequired",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        4,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AE algorithm would need a flash for good results",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AeStatePrecapture",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        5,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AE algorithm has started a pre-capture metering session.\n\\sa AePrecaptureTrigger\n",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "AwbState",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control to report the current AWB algorithm state. Currently identical\nto ANDROID_CONTROL_AWB_STATE.\n\n Current state of the AWB algorithm.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbStateInactive",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AWB algorithm is inactive.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbStateSearching",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AWB algorithm has not converged yet.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbConverged",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AWB algorithm has converged.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "AwbLocked",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        3,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The AWB algorithm is locked.",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "SensorRollingShutterSkew",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int64_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control to report the time between the start of exposure of the first\nrow and the start of exposure of the last row. Currently identical to\nANDROID_SENSOR_ROLLING_SHUTTER_SKEW\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "LensShadingMapMode",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control to report if the lens shading map is available. Currently\nidentical to ANDROID_STATISTICS_LENS_SHADING_MAP_MODE.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "LensShadingMapModeOff",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "No lens shading map mode is available.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "LensShadingMapModeOn",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The lens shading map mode is available.",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "SceneFlicker",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control to report the detected scene light frequency. Currently\nidentical to ANDROID_STATISTICS_SCENE_FLICKER.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "SceneFickerOff",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "No flickering detected.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "SceneFicker50Hz",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "50Hz flickering detected.",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "SceneFicker60Hz",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "60Hz flickering detected.",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "PipelineDepth",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Specifies the number of pipeline stages the frame went through from when\nit was exposed to when the final completed result was available to the\nframework. Always less than or equal to PipelineMaxDepth. Currently\nidentical to ANDROID_REQUEST_PIPELINE_DEPTH.\n\nThe typical value for this control is 3 as a frame is first exposed,\ncaptured and then processed in a single pass through the ISP. Any\nadditional processing step performed after the ISP pass (in example face\ndetection, additional format conversions etc) count as an additional\npipeline stage.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "MaxLatency",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "The maximum number of frames that can occur after a request (different\nthan the previous) has been submitted, and before the result's state\nbecomes synchronized. A value of -1 indicates unknown latency, and 0\nindicates per-frame control. Currently identical to\nANDROID_SYNC_MAX_LATENCY.\n",
                                    ),
                                },
                            ),
                        },
                    ),
                    Hash(
                        {
                            String(
                                "TestPatternMode",
                            ): Hash(
                                {
                                    String(
                                        "type",
                                    ): String(
                                        "int32_t",
                                    ),
                                    String(
                                        "draft",
                                    ): Boolean(
                                        true,
                                    ),
                                    String(
                                        "description",
                                    ): String(
                                        "Control to select the test pattern mode. Currently identical to\nANDROID_SENSOR_TEST_PATTERN_MODE.\n",
                                    ),
                                    String(
                                        "enum",
                                    ): Array(
                                        [
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "TestPatternModeOff",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        0,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "No test pattern mode is used. The camera device returns frames from\nthe image sensor.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "TestPatternModeSolidColor",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        1,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "Each pixel in [R, G_even, G_odd, B] is replaced by its respective\ncolor channel provided in test pattern data.\n\\todo Add control for test pattern data.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "TestPatternModeColorBars",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        2,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "All pixel data is replaced with an 8-bar color pattern. The vertical\nbars (left-to-right) are as follows; white, yellow, cyan, green,\nmagenta, red, blue and black. Each bar should take up 1/8 of the\nsensor pixel array width. When this is not possible, the bar size\nshould be rounded down to the nearest integer and the pattern can\nrepeat on the right side. Each bar's height must always take up the\nfull sensor pixel array height.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "TestPatternModeColorBarsFadeToGray",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        3,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The test pattern is similar to TestPatternModeColorBars,\nexcept that each bar should start at its specified color at the top\nand fade to gray at the bottom. Furthermore each bar is further\nsubdevided into a left and right half. The left half should have a\nsmooth gradient, and the right half should have a quantized\ngradient. In particular, the right half's should consist of blocks\nof the same color for 1/16th active sensor pixel array width. The\nleast significant bits in the quantized gradient should be copied\nfrom the most significant bits of the smooth gradient. The height of\neach bar should always be a multiple of 128. When this is not the\ncase, the pattern should repeat at the bottom of the image.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "TestPatternModePn9",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        4,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "All pixel data is replaced by a pseudo-random sequence generated\nfrom a PN9 512-bit sequence (typically implemented in hardware with\na linear feedback shift register). The generator should be reset at\nthe beginning of each frame, and thus each subsequent raw frame with\nthis test pattern should be exactly the same as the last.\n",
                                                    ),
                                                },
                                            ),
                                            Hash(
                                                {
                                                    String(
                                                        "name",
                                                    ): String(
                                                        "TestPatternModeCustom1",
                                                    ),
                                                    String(
                                                        "value",
                                                    ): Integer(
                                                        256,
                                                    ),
                                                    String(
                                                        "description",
                                                    ): String(
                                                        "The first custom test pattern. All custom patterns that are\navailable only on this camera device are at least this numeric\nvalue. All of the custom test patterns will be static (that is the\nraw image must not vary from frame to frame).\n",
                                                    ),
                                                },
                                            ),
                                        ],
                                    ),
                                },
                            ),
                        },
                    ),
                ],
            ),
        },
    ),
]', libcamera-meta/src/lib.rs:26:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
